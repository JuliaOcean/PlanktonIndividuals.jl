mutable struct RunOptions
    OutputChoice::Bool    # `true` for save output files
    NutOutputChoice::Bool # `true` for save each timestep separately, `false` for save all timesteps in one file
    GridChoice::Bool      # `true` for use default grid
    GridOfflineOpt::Dict  # include path to offline grid information and grid selection
    VelChoice::Bool       # `true` for use default velocity fields
    VelOfflineOpt::Dict   # include path to offline velocity fields, grid selection and vel time step information
end

mutable struct PlankOpt
    Nindivi::Int64        # number of individuals in each species
    Nsp::Int64            # number of species
    Nsuper::Int64         # number of cells each super individual represents
    Cquota::Array         # Average C quota in cell (mmolC/cell)
    mean::Float64         # Mean of a normal distribution for plankton agents
    var::Float64          # Variance of a normal distribution for plankton agents
end

mutable struct RunParams
    nTime::Int64                     # number of time steps
    ΔT::Int64                        # seconds of each time step
    PhytoOpt::PlankOpt               # phytoplankton configurations
    Zoo::Bool                        # Whether include zooplankton
    ZooOpt::Union{Nothing,PlankOpt}  # Zooplankton configurations
end

mutable struct velocity #for offline only, include time series
    u::Array{Float64,3}
    v::Array{Float64,3}
    w::Array{Float64,3}
end

struct grids
    xC::Array{Float32,2}
    yC::Array{Float32,2}
    zC::Array{Float32,1}
    xF::Array{Float32,2}
    yF::Array{Float32,2}
    zF::Array{Float32,1}
    dxF::Array{Float32,2} # unit: meter
    dyF::Array{Float32,2} # unit: meter
    dzF::Array{Float32,1} # unit: meter
    dxC::Array{Float32,2} # unit: meter, distance from center to center
    dyC::Array{Float32,2} # unit: meter, distance from center to center
    dzC::Array{Float32,1} # unit: meter, distance from center to center
    Ax::Array{Float32,3} # unit: m²
    Ay::Array{Float32,3} # unit: m²
    Az::Array{Float32,2} # unit: m²
    V ::Array{Float32,3} # unit: m³
    Nx::Int
    Ny::Int
    Nz::Int
end

mutable struct individuals
    phytos::Array
    zoos::Union{Nothing,Array}
end

mutable struct nutrient_fields # for tendencies, forcings and consumptions
    DIC::Array{Float64,3}
    NH4::Array{Float64,3}
    NO3::Array{Float64,3}
    PO4::Array{Float64,3}
    DOC::Array{Float64,3}
    DON::Array{Float64,3}
    DOP::Array{Float64,3}
    POC::Array{Float64,3}
    PON::Array{Float64,3}
    POP::Array{Float64,3}
end

mutable struct Model_struct
    t::Int64
    individuals::individuals    # initial individuals generated by `setup_agents`
    nutrients::nutrient_fields  # initial nutrient fields
    grid::grids                 # grid information
    PAR::Array{Float64,3}       # surface PAR
    temp::Array{Float64,4}      # temperature
    params::Dict                # biogeochemical parameter set
end

mutable struct pop_counts
    divid::Int64
    death::Int64
    graze::Int64
end

